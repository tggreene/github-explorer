;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name ghe.graph, :imports nil, :requires {cljsjs.d3 cljsjs.d3, cljsjs.c3 cljsjs.c3}, :uses nil, :defs {dangerous {:protocol-inline nil, :meta {:file "/Users/timgreene/experiments/ghe/src/cljs/ghe/graph.cljs", :line 4, :column 9, :end-line 4, :end-column 18, :arglists (quote ([comp content] [comp props content])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([comp content] [comp props content]), :arglists ([comp content] [comp props content]), :arglists-meta (nil nil)}}, :name ghe.graph/dangerous, :variadic false, :file "src/cljs/ghe/graph.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([comp content] [comp props content]), :arglists ([comp content] [comp props content]), :arglists-meta (nil nil)}, :method-params ([comp content] [comp props content]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists ([comp content] [comp props content])}, get-graph {:protocol-inline nil, :meta {:file "/Users/timgreene/experiments/ghe/src/cljs/ghe/graph.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([data]))}, :name ghe.graph/get-graph, :variadic false, :file "src/cljs/ghe/graph.cljs", :end-column 16, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, create-graph {:protocol-inline nil, :meta {:file "/Users/timgreene/experiments/ghe/src/cljs/ghe/graph.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([target data]))}, :name ghe.graph/create-graph, :variadic false, :file "src/cljs/ghe/graph.cljs", :end-column 19, :method-params ([target data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([target data]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:width :size :div :bindto :__html :dangerouslySetInnerHTML :height}, :order [:dangerouslySetInnerHTML :__html :div :size :width :height :bindto]}, :doc nil}